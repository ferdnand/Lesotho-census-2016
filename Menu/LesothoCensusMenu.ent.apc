{Application 'LESOTHOCENSUSMENU' logic file generated by CSPro}
PROC GLOBAL
// Arrays for dynamic value sets
array numeric codes(200);
array string labels(200);

array string mycodes(200);
array string mylabels(200);
file tempFile;
array ageBySex5YearGroups(21, 2);


string loginFilename;
string enumeratorEA;
file tmpFile;
string enumeratorDataFileName; //
string supervisorDataFilename; //
string enumtempFileName; //
numeric ea, totMales = 0, totFemales = 0, totPopulation = 0, males, females, population; //

list string fileListing; //variable to store all data files in a directory

file pffFile; // File variable for writing out data entry pff file

//********************************************************************************************************
array string EAarray(25);


function pickEA()

	string menuApplicationFolder = pathname(Application); //this is the path of our application;
	string dataFolder = menuApplicationFolder + "../Data/Enumerator"; //this is the data folder (all our data is stored in here)
	string eacode;
		
	numeric i = i;
	
	dirlist(fileListing,dataFolder,"*.dat");
		
	    if length(fileListing) > 0 then
		   
			do i = 1 while i <= length(fileListing)
				eacode = fileListing(i)[length(fileListing(i))-14:11];
				
				EAarray(i) = eacode;
		    enddo;
		else
			errmsg("No data files found.");
		endif;
		
		EAarray(i) = "";
		
	trace("about to call accept");
	numeric indexChosen = accept("Choose EA", EAarray);
	pickEA = tonumber(EAarray(indexChosen));	

end;

//************************************************************************************************************




	// Loop through all households 
	// until loadcase returns zero when it hits end of file.	
function  ageBySexTable()
	numeric EApicked = pickEA();
	
	trace(maketext("Load file: %s", maketext("%s%011d.dat", "../Data/Enumerator/", EApicked)));
	setfile(LESOTHOCENSUS2016_DICT, maketext("%s%011d.dat", "../Data/Enumerator/", EApicked));
	string reportFilename;
	string agebysex;
	
	locate(LESOTHOCENSUS2016_DICT, >=, "");	
	while loadcase(LESOTHOCENSUS2016_DICT) <> 0 do
		
		trace(maketext("Found hh with %d members------------------------", count(LESOTHOCENSUS2016_DICT.INDIVIDUAL)));
		// Loop through each individual in household
		numeric personNum;
		do personNum = 1 while personNum <= count(LESOTHOCENSUS2016_DICT.INDIVIDUAL)
			trace(maketext("Person age = %d sex = %d", B5(personNum), B4(personNum)));
			if (B4(personNum) in 0:130) then
				numeric ageGroup = int(B5(personNum)/5) + 1;
				inc(ageBySex5YearGroups(ageGroup, B4(personNum)));
			endif;
		enddo;
		
	 enddo;
	

	// Write out age by sex distribution to EA array that looks like:
	// var data = [
	//    {group: '0-9', male: 10, female: 12, total: 22},
	//    {group: '10-19', male: 14, female: 15, total: 29},
	//    ...
	// ];

	string reportDataFilename = maketext("%sagebysex.js", pathname(Application));
	setfile(tempFile, reportDataFilename);
	
	filewrite(tempFile, "var data = [");
  	numeric groupNum;
  	do groupNum = 1 while groupNum <= 20
  		numeric lowerBound = (groupNum - 1) * 5;
  		numeric upperBound = groupNum * 5 - 1;
  		numeric male = ageBySex5YearGroups(groupNum, 1);
  		numeric female = ageBySex5YearGroups(groupNum, 2);
  		numeric total = male + female;

  		filewrite(tempFile, "  {group: '%d-%d', male: %d, female: %d, total: %d},", 
  				  lowerBound, upperBound, male, female, total); 
  								  
	enddo;
	
	filewrite(tempFile, "];");
	close(tempFile);

	reportFilename = maketext("%sagebysex.html", pathname(Application));
	agebysex = maketext("%s%d.dat", "../Data/Enumerator/", EApicked);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;
//******************************************************************************************************

function SexRatioReport()
//Clearing the array before generating the report,
//to avoid double counting.
	numeric i;
	do i = 1 while i <= 21 
		ageBySex5YearGroups(i, 1) = 0;
		ageBySex5YearGroups(i, 2) = 0;
	enddo;
	
	// Loop through all households 
	// until loadcase returns zero when it hits end of file.
	locate(LESOTHOCENSUS2016_DICT, >=, "");	
	while loadcase(LESOTHOCENSUS2016_DICT) <> 0 do
		
		// Loop through each individual in household
		numeric personNum;
		do personNum = 1 while personNum <= count(LESOTHOCENSUS2016_DICT.INDIVIDUAL)
			if (B5(personNum) in 0:130) then
				   numeric ageGroup = int (low(100,B5(personNum))/5) + 1;
				   inc(ageBySex5YearGroups(ageGroup, B4(personNum)));
				
			endif;
		enddo;		
	 enddo;
	
	string reportFilename = maketext("%sSex Ratio Report.txt", pathname(Application));
	setfile(tempFile, reportFilename);

	filewrite(tempFile, "Age Groups   Males   Female   Sex Ratio");
	filewrite(tempFile, "----------------------------------------");
	
  	numeric groupNum;
  	do groupNum = 1 while groupNum <= 21
  		numeric lowerBound = (groupNum - 1) * 5;
  		numeric upperBound = groupNum * 5 - 1;
  		numeric male = ageBySex5YearGroups(groupNum, 1);
  		numeric female = ageBySex5YearGroups(groupNum, 2);
  		numeric SexRatio = (male/female) * 100;
		
		if groupNum <= 20 then
  		   filewrite(tempFile, " %3d -%3d      %3d       %3d         %3d", 
  				      lowerBound, upperBound, male, female, SexRatio); 
  		elseif groupNum = 21 then
  			filewrite(tempFile, "  100+         %3d       %3d         %3d", 
  				       male, female, SexRatio); 
  		endif	  
  	    
	enddo;
	filewrite(tempFile, "----------------------------------------");
	filewrite(tempFile, "-------------END OF REPORT--------------");
	//filewrite(tempFile, "];");
	close(tempFile);

	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end


function CreateAndRunPFF()

	string tempFolder = pathname(Temp);
	string pffFilename = tempFolder + "HouseholdDataEntry.pff";
	string fileDescription = maketext("EA - %s", STAFF_EA);

	string menuApplicationFolder = pathname(Application);
	string householdApplicationFolder = menuApplicationFolder + "../HouseholdDataEntry/";
	
	setfile(pffFile,pffFilename,create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 6.1");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description=2016 LESOTHO PHC(%s)", fileDescription);

	filewrite(pffFile,"[DataEntryInit]");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%sHouseholdDataEntry.ent", householdApplicationFolder);	
	enumeratorDataFilename = maketext("%s.dat", STAFF_EA);
	filewrite(pffFile,"InputData=%s%s",householdApplicationFolder,enumeratorDataFilename);

	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"DISTRICT=%02d",S_DISTRICT);
	filewrite(pffFile,"CONSTITUENCY=%02d",S_CONSTITUENCY);
	filewrite(pffFile,"COMMUNITY_COUNCIL=%s",S_COMMUNITY_COUNCIL);
	filewrite(pffFile,"ZONE=%d",S_ZONE);
	filewrite(pffFile,"SETTLEMENT=%d",S_SETTLEMENT);
	filewrite(pffFile,"ENUMERATION_AREA=%s",STAFF_EA);
	
	close(pffFile);

	numeric result = execpff(filename(pffFile), stop);
	if result <> 1 then
		errmsg("Failed to launch household data entry");
		reenter;
	endif;

end;

// File variable for writing out supervisor review pff file
file sr_pffFile;

function CreateAndRunSRPFF(asDistrict, asConstituency, alpha asCouncil, asZone, asEA, asWard, asSettlement, asVillageno, asHouseholdno)

	string tempFolder = pathname(Temp);
	string pffFilename = tempFolder + "AssistSupReview.pff";
	string fileDescription = maketext("EA - %011d", asEA);

	string menuApplicationFolder = pathname(Application);
	string assSupRevApplicationFolder = menuApplicationFolder + "../AssistSupReview/";
	setfile(sr_pffFile,pffFilename,create);

	filewrite(sr_pffFile,"[Run Information]");
	filewrite(sr_pffFile,"Version=CSPro 6.1");
	filewrite(sr_pffFile,"AppType=Entry");
	filewrite(sr_pffFile,"Description=2016 LESOTHO PHC(%s)", fileDescription);

	filewrite(sr_pffFile,"[DataEntryInit]");

	filewrite(sr_pffFile,"[Files]");
	filewrite(sr_pffFile,"Application=%sAssistSupReview.ent", assSupRevApplicationFolder);	
	supervisorDataFilename = maketext("RV%011d.dat", asEA);
	filewrite(sr_pffFile,"InputData=%s%s",assSupRevApplicationFolder,supervisorDataFilename);

	filewrite(sr_pffFile,"[Parameters]");
	filewrite(sr_pffFile,"DISTRICT=%02d",asDistrict);
	filewrite(sr_pffFile,"CONSTITUENCY=%02d",asConstituency);
	filewrite(sr_pffFile,"COMMUNITY_COUNCIL=%s",asCouncil);
	filewrite(sr_pffFile,"ZONE=%d",asZone);
	filewrite(sr_pffFile,"SETTLEMENT=%d",asSettlement);
	filewrite(sr_pffFile,"ENUMERATION_AREA=%011d",asEA);
	filewrite(sr_pffFile,"WARD=%02d",asWard);
	filewrite(sr_pffFile,"VILLAGE_NUMBER=%02d",asVillageno);
	filewrite(sr_pffFile,"HOUSEHOLD_NUMBER=%03d",asHouseholdno);
	
	close(sr_pffFile);

	numeric result = execpff(filename(sr_pffFile), stop);
	if result <> 1 then
		errmsg("Failed to launch assistant supervisor review data entry");
		reenter;
	endif;

end;


//function to display data for all the enumeration areas irrespective of the date they were enumerated on.
function ShowSummaryReport()

	string reportFilename = maketext("%ssummaryreport.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	filewrite(tempFile, "Enumeration Area Summary Report");
	filewrite(tempFile, "-------------------------------");
	filewrite(tempFile, "");

	string menuApplicationFolder = pathname(Application); //this is the path of our application
	string dataFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
		
	numeric ctr;
    dirlist(fileListing,dataFolder,"*.dat");
    
	do ctr = 1 while ctr <= length(fileListing)
		string eacode = fileListing(ctr)[length(fileListing(ctr))-14:11];
	
		enumeratorDataFilename = maketext("%s%011s.dat", dataFolder, eacode);
		// Create a dynamic value set of all completed households
		// in the enumerator data file.	
		numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
		if result <> 1 then
			errmsg("Unable to load enumerator data file");
			reenter ASSISTANT_SUPERVISOR_MENU;
		endif;
		
		// Start at first household in enumerator data file
		locate(LESOTHOCENSUS2016_DICT, >=, "");	
			// Loop through all households 
			// until loadcase returns zero when it hits end of file.
			numeric i;
			numeric TotalHH =0;
			numeric CompletedHH = 0;
			numeric PartialHH = 0;
			numeric NoMember = 0;
			numeric Absent = 0;
			numeric Vacant = 0;
			numeric Destroyed = 0;
			numeric PartialSave = 0;
			do i = 0 while loadcase(LESOTHOCENSUS2016_DICT) <> 0
				if FINAL_RESULT_CODE = 1 then
					CompletedHH = CompletedHH + 1;
				elseif FINAL_RESULT_CODE = 6 then
					PartialHH = PartialHH + 1;
				elseif HOUSEHOLD_STATUS = 2 then
					NoMember = NoMember + 1;
				elseif HOUSEHOLD_STATUS = 3 then
					Absent = Absent + 1;
				elseif HOUSEHOLD_STATUS = 4 then
					Vacant = Vacant + 1;
				elseif HOUSEHOLD_STATUS = 5 then
					Destroyed = Destroyed + 1;
				elseif not FINAL_RESULT_CODE in 1,6 then
					PartialSave = PartialSave + 1;
				endif;
				TotalHH = TotalHH +1;
				
				males  = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 1);
				females = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 2);
				//population = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL);
			
				totMales = totMales + males;
				totFemales = totFemales + females;
				//totPopulation = totPopulation + population;
			enddo;
			
			totPopulation = totMales + totFemales;
				
		filewrite(tempFile,"EA CODE: %011d",ENUMERATION_AREA);
		filewrite(tempfile,"Households%s","								Household Status");
		filewrite(tempFile,"%d										%s",CompletedHH,getlabel(FINAL_RESULT_CODE,1));
		filewrite(tempFile,"%d										%s",PartialHH,getlabel(FINAL_RESULT_CODE,6));
		filewrite(tempFile,"%d										%s",NoMember,getlabel(HOUSEHOLD_STATUS,2));
		filewrite(tempFile,"%d										%s",Absent,getlabel(HOUSEHOLD_STATUS,3));
		filewrite(tempFile,"%d										%s",Vacant,getlabel(HOUSEHOLD_STATUS,4));
		filewrite(tempFile,"%d										%s",Destroyed,getlabel(HOUSEHOLD_STATUS,5));
		filewrite(tempFile,"%d										Partially saved",PartialSave);
		filewrite(tempFile, "----------------------------------------------------------");
		filewrite(tempFile,"%d										%s",TotalHH,"Total Households");
		filewrite(tempFile,"");
		filewrite(tempFile, "==========================================================");
		filewrite(tempFile,"%d										%s",totMales,"Total Males");
		filewrite(tempFile,"%d										%s",totFemales,"Total Females");
		filewrite(tempFile,"%d										%s",totPopulation,"Total Population");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"******end of report for current enumeration area code******");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"");

	enddo;
	    
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;

{
function ShowSummaryReport_EA(string eacode)

	string reportFilename = maketext("%ssummaryreport.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	filewrite(tempFile, "Enumeration Area Summary Report");
	filewrite(tempFile, "-------------------------------");
	filewrite(tempFile, "");

	string menuApplicationFolder = pathname(Application); //this is the path of our application
	string dataFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
	
		enumeratorDataFilename = maketext("%s%011s.dat", dataFolder, eacode);
		// Create a dynamic value set of all completed households
		// in the enumerator data file.	
		numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
		if result <> 1 then
			errmsg("Unable to load enumerator data file");
			reenter ASSISTANT_SUPERVISOR_MENU;
		endif;
		
		// Start at first household in enumerator data file
		locate(LESOTHOCENSUS2016_DICT, >=, "");	
			// Loop through all households 
			// until loadcase returns zero when it hits end of file.
			numeric i;
			numeric TotalHH =0;
			numeric CompletedHH = 0;
			numeric PartialHH = 0;
			numeric NoMember = 0;
			numeric Absent = 0;
			numeric Vacant = 0;
			numeric Destroyed = 0;
			numeric PartialSave = 0;
			do i = 0 while loadcase(LESOTHOCENSUS2016_DICT) <> 0
				if FINAL_RESULT_CODE = 1 then
					CompletedHH = CompletedHH + 1;
				elseif FINAL_RESULT_CODE = 6 then
					PartialHH = PartialHH + 1;
				elseif HOUSEHOLD_STATUS = 2 then
					NoMember = NoMember + 1;
				elseif HOUSEHOLD_STATUS = 3 then
					Absent = Absent + 1;
				elseif HOUSEHOLD_STATUS = 4 then
					Vacant = Vacant + 1;
				elseif HOUSEHOLD_STATUS = 5 then
					Destroyed = Destroyed + 1;
				elseif not FINAL_RESULT_CODE in 1,6 then
					PartialSave = PartialSave + 1;
				endif;
				TotalHH = TotalHH +1;
				
				males  = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 1);
				females = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 2);
				//population = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL);
			
				totMales = totMales + males;
				totFemales = totFemales + females;
				//totPopulation = totPopulation + population;
			enddo;
			
			totPopulation = totMales + totFemales;
				
		filewrite(tempFile,"EA CODE: %011d",ENUMERATION_AREA);
		filewrite(tempfile,"Households%s","								Household Status");
		filewrite(tempFile,"%d										%s",CompletedHH,getlabel(FINAL_RESULT_CODE,1));
		filewrite(tempFile,"%d										%s",PartialHH,getlabel(FINAL_RESULT_CODE,6));
		filewrite(tempFile,"%d										%s",NoMember,getlabel(HOUSEHOLD_STATUS,2));
		filewrite(tempFile,"%d										%s",Absent,getlabel(HOUSEHOLD_STATUS,3));
		filewrite(tempFile,"%d										%s",Vacant,getlabel(HOUSEHOLD_STATUS,4));
		filewrite(tempFile,"%d										%s",Destroyed,getlabel(HOUSEHOLD_STATUS,5));
		filewrite(tempFile,"%d										Partially saved",PartialSave);
		filewrite(tempFile, "----------------------------------------------------------");
		filewrite(tempFile,"%d										%s",TotalHH,"Total Households");
		filewrite(tempFile,"");
		filewrite(tempFile, "==========================================================");
		filewrite(tempFile,"%d										%s",totMales,"Total Males");
		filewrite(tempFile,"%d										%s",totFemales,"Total Females");
		filewrite(tempFile,"%d										%s",totPopulation,"Total Population");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"******end of report for current enumeration area code******");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"");
	    
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;
}

//function to display all the EAs for a specific date selected by the supervisor
function ShowSummaryReportAllbyDATE(string viewdate)

	string reportFilename = maketext("%ssummaryreport.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	filewrite(tempFile, "Enumeration Area Summary Report");
	filewrite(tempFile, "-------------------------------");
	filewrite(tempFile, "");

	string menuApplicationFolder = pathname(Application); //this is the path of our application
	string dataFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
		
	numeric ctr;
    dirlist(fileListing,dataFolder,"*.dat");
    
	do ctr = 1 while ctr <= length(fileListing)
		string eacode = fileListing(ctr)[length(fileListing(ctr))-14:11];
	
		enumeratorDataFilename = maketext("%s%011s.dat", dataFolder, eacode);
		// Create a dynamic value set of all completed households
		// in the enumerator data file.	
		numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
		if result <> 1 then
			errmsg("Unable to load enumerator data file");
			reenter ASSISTANT_SUPERVISOR_MENU;
		endif;
		
		// Start at first household in enumerator data file
		locate(LESOTHOCENSUS2016_DICT, >=, "");	
			// Loop through all households 
			// until loadcase returns zero when it hits end of file.
			numeric i;
			numeric TotalHH =0;
			numeric CompletedHH = 0;
			numeric PartialHH = 0;
			numeric NoMember = 0;
			numeric Absent = 0;
			numeric Vacant = 0;
			numeric Destroyed = 0;
			numeric PartialSave = 0;
			do i = 0 while loadcase(LESOTHOCENSUS2016_DICT) <> 0				
				if viewdate = INTERVIEW_DATE then
					if FINAL_RESULT_CODE = 1 then
						CompletedHH = CompletedHH + 1;
					elseif FINAL_RESULT_CODE = 6 then
						PartialHH = PartialHH + 1;
					elseif HOUSEHOLD_STATUS = 2 then
						NoMember = NoMember + 1;
					elseif HOUSEHOLD_STATUS = 3 then
						Absent = Absent + 1;
					elseif HOUSEHOLD_STATUS = 4 then
						Vacant = Vacant + 1;
					elseif HOUSEHOLD_STATUS = 5 then
						Destroyed = Destroyed + 1;
					elseif not FINAL_RESULT_CODE in 1,6 then
						PartialSave = PartialSave + 1;
					endif;
					TotalHH = TotalHH +1;
				
					males  = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 1);
					females = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 2);
					//population = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL);
				
					totMales = totMales + males;
					totFemales = totFemales + females;
					//totPopulation = totPopulation + population;
				endif;
			enddo;
			
			totPopulation = totMales + totFemales;
								
		filewrite(tempFile,"DATE: %s", viewdate);
		filewrite(tempFile,"EA CODE: %011d",ENUMERATION_AREA);
		filewrite(tempfile,"Households%s","								Household Status");
		filewrite(tempFile,"%d										%s",CompletedHH,getlabel(FINAL_RESULT_CODE,1));
		filewrite(tempFile,"%d										%s",PartialHH,getlabel(FINAL_RESULT_CODE,6));
		filewrite(tempFile,"%d										%s",NoMember,getlabel(HOUSEHOLD_STATUS,2));
		filewrite(tempFile,"%d										%s",Absent,getlabel(HOUSEHOLD_STATUS,3));
		filewrite(tempFile,"%d										%s",Vacant,getlabel(HOUSEHOLD_STATUS,4));
		filewrite(tempFile,"%d										%s",Destroyed,getlabel(HOUSEHOLD_STATUS,5));
		filewrite(tempFile,"%d										Partially saved",PartialSave);
		filewrite(tempFile, "----------------------------------------------------------");
		filewrite(tempFile,"%d										%s",TotalHH,"Total Households");
		filewrite(tempFile,"");
		filewrite(tempFile, "==========================================================");
		filewrite(tempFile,"%d										%s",totMales,"Total Males");
		filewrite(tempFile,"%d										%s",totFemales,"Total Females");
		filewrite(tempFile,"%d										%s",totPopulation,"Total Population");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"******end of report for current enumeration area code******");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"");

	enddo;
	    
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;

//function to display data for the EA selected by the supervisor on a specific date
function ShowSummaryReport_EAbyDATE(string eacode, string viewdate)

	string reportFilename = maketext("%ssummaryreport.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	filewrite(tempFile, "Enumeration Area Summary Report by Day");
	filewrite(tempFile, "-------------------------------");
	filewrite(tempFile, "");

	string menuApplicationFolder = pathname(Application); //this is the path of our application
	string dataFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
	
		enumeratorDataFilename = maketext("%s%011s.dat", dataFolder, eacode);
		// Create a dynamic value set of all completed households
		// in the enumerator data file.	
		numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
		if result <> 1 then
			errmsg("Unable to load enumerator data file");
			reenter ASSISTANT_SUPERVISOR_MENU;
		endif;
		
		// Start at first household in enumerator data file
		locate(LESOTHOCENSUS2016_DICT, >=, "");	
			// Loop through all households 
			// until loadcase returns zero when it hits end of file.
			numeric i;
			numeric TotalHH =0;
			numeric CompletedHH = 0;
			numeric PartialHH = 0;
			numeric NoMember = 0;
			numeric Absent = 0;
			numeric Vacant = 0;
			numeric Destroyed = 0;
			numeric PartialSave = 0;
			do i = 0 while loadcase(LESOTHOCENSUS2016_DICT) <> 0
				if viewdate = INTERVIEW_DATE then
					if FINAL_RESULT_CODE = 1 then
						CompletedHH = CompletedHH + 1;
					elseif FINAL_RESULT_CODE = 6 then
						PartialHH = PartialHH + 1;
					elseif HOUSEHOLD_STATUS = 2 then
						NoMember = NoMember + 1;
					elseif HOUSEHOLD_STATUS = 3 then
						Absent = Absent + 1;
					elseif HOUSEHOLD_STATUS = 4 then
						Vacant = Vacant + 1;
					elseif HOUSEHOLD_STATUS = 5 then
						Destroyed = Destroyed + 1;
					elseif not FINAL_RESULT_CODE in 1,6 then
						PartialSave = PartialSave + 1;
					endif;
					TotalHH = TotalHH +1;
				
					males  = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 1);
					females = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 2);
					//population = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL);
				
					totMales = totMales + males;
					totFemales = totFemales + females;
					//totPopulation = totPopulation + population;
				endif;
			enddo;
			
			totPopulation = totMales + totFemales;
				
		filewrite(tempFile,"DATE: %s", viewdate);
		filewrite(tempFile,"EA CODE: %011d",ENUMERATION_AREA);
		filewrite(tempfile,"Households%s","								Household Status");
		filewrite(tempFile,"%d										%s",CompletedHH,getlabel(FINAL_RESULT_CODE,1));
		filewrite(tempFile,"%d										%s",PartialHH,getlabel(FINAL_RESULT_CODE,6));
		filewrite(tempFile,"%d										%s",NoMember,getlabel(HOUSEHOLD_STATUS,2));
		filewrite(tempFile,"%d										%s",Absent,getlabel(HOUSEHOLD_STATUS,3));
		filewrite(tempFile,"%d										%s",Vacant,getlabel(HOUSEHOLD_STATUS,4));
		filewrite(tempFile,"%d										%s",Destroyed,getlabel(HOUSEHOLD_STATUS,5));
		filewrite(tempFile,"%d										Partially saved",PartialSave);
		filewrite(tempFile, "----------------------------------------------------------");
		filewrite(tempFile,"%d										%s",TotalHH,"Total Households");
		filewrite(tempFile,"");
		filewrite(tempFile, "==========================================================");
		filewrite(tempFile,"%d										%s",totMales,"Total Males");
		filewrite(tempFile,"%d										%s",totFemales,"Total Females");
		filewrite(tempFile,"%d										%s",totPopulation,"Total Population");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"******end of report for current enumeration area code******");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"");
	    
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;

PROC LESOTHOCENSUSMENU_FF
preproc
loginFilename = pathname(Application) + "login.txt";
enumeratorEA = pathname(Application) + "eacode.txt";	
string menuApplicationFolder = pathname(Application);
string householdApplicationFolder = menuApplicationFolder + "../HouseholdDataEntry/";

// Check to see if user is already logged in
if fileexist(enumeratorEA) = 1 then
	if setfile(tmpFile, enumeratorEA) = 1 then
		string codeString;
		numeric result = fileread(tmpFile, codeString);
		if result = 1 then
			// We have read in ea code from eacode file
			ea = tonumber(codeString);
			//ASS_SUP_EA = maketext("%011d",ea);
		endif;
		close(tmpFile);
	endif;
endif;

enumeratorDataFilename = maketext("%s%011d.dat", householdApplicationFolder, ea);


PROC USER_CODE
preproc

// Check to see if user is already logged in
if fileexist(loginFilename) = 1 then
	if setfile(tmpFile, loginFilename) = 1 then
		string codeString;
		numeric result = fileread(tmpFile, codeString);
		if result = 1 then
			// We have read in staff code from login file
			// we need to check that it is valid by looking it up in
			// the staff lookup file.
			STAFF_CODE = tonumber(codeString);
			if loadcase(STAFF_DICT, STAFF_CODE) = 1 then
				// User code from login file is valid, use noinput
				// to avoid entering user code.
				USER_CODE = STAFF_CODE;
				noinput;
			endif;
		endif;
		close(tmpFile);
	endif;
endif;

postproc
// Validate user code is correct
// Go to either enumerator menu or supervisor menu
// depending on the role of the user.

STAFF_CODE = USER_CODE;
if loadcase(STAFF_DICT, STAFF_CODE) = 0 then
	// The code was not found in the staff lookup file.
	errmsg("Invalid user code. Try again.");
	reenter;
else
	// Found the code in the staff lookup file.
	// STAFF_ROLE and STAFF_NAME are now filled in with values
	// from the lookup file.
	if not STAFF_ROLE in 1:3 then
		errmsg("Invalid role");
		reenter;
	else
	
		// Login successfull, save out the staff code
		// so that they don't have to login again until they logout.
		if setfile(tmpFile, loginFilename, create) = 1 then
			filewrite(tmpFile, "%d", STAFF_CODE);
			close(tmpFile);
			
			//Save out the enumeration area for the enumerator so that the assisstant supervisor can use it to postcheck 
			//households
			if STAFF_ROLE = 1 then
				if setfile(tmpFile, enumeratorEA, create) = 1 then
					filewrite(tmpFile, "%s", STAFF_EA);
					close(tmpFile);
				endif;
			endif;
		endif;
				
		
		// Go to appropriate menu for staff role.	
		if STAFF_ROLE = 1 then
			skip to ENUMERATOR_MENU;
		elseif STAFF_ROLE = 2 then
			skip to ASSISTANT_SUPERVISOR_MENU;
		elseif STAFF_ROLE = 3 then
			skip to CONSTITUENCY_SUPERVISOR_MENU;
		endif;
	endif;
endif;

PROC ENUMERATOR_MENU

if ENUMERATOR_MENU = 1 then
	// Launch data entry
	CreateAndRunPFF();
elseif ENUMERATOR_MENU = 2 then
	if sync("SyncWithSupervisor.pnc") then
		errmsg("Sync was successful");
		stop(0);
	else
		reenter;
	endif;
elseif ENUMERATOR_MENU = 3 then
	// Logout	
	// Erase login file so that we don't automatically
	// login next time.
	filedelete(loginFilename);	
	// Quit data entry
	stop(1);
endif;

PROC ASSISTANT_SUPERVISOR_MENU

postproc
if ASSISTANT_SUPERVISOR_MENU = 1 then
	skip to CHOOSE_POSTCHECK_HOUSEHOLD;
elseif ASSISTANT_SUPERVISOR_MENU = 2 then
	//skip to household_status;
elseif ASSISTANT_SUPERVISOR_MENU = 9 then
	// Logout
	// Erase login file so that we don't automatically
	// login next time.
	filedelete(loginFilename);
	// Quit data entry
	stop(1);
endif;

PROC CONSTITUENCY_SUPERVISOR_MENU

postproc
if CONSTITUENCY_SUPERVISOR_MENU = 1 then
	//skip to view_data;
elseif CONSTITUENCY_SUPERVISOR_MENU = 2 then
	SexRatioReport();
elseif CONSTITUENCY_SUPERVISOR_MENU = 3 then
	agebysexTable();
elseif CONSTITUENCY_SUPERVISOR_MENU = 4 then
	//skip to household_status;     
elseif CONSTITUENCY_SUPERVISOR_MENU = 5 then
	if sync("Server.pnc") then
		errmsg("Sync was successful");
		stop(0);
	else
		reenter;
	endif;
elseif CONSTITUENCY_SUPERVISOR_MENU = 6 then
	if sync("SyncWithServer.pnc") then
		errmsg("Sync was successful");
		stop(0);
	else
		reenter;
	endif;
elseif CONSTITUENCY_SUPERVISOR_MENU = 7 then
	// Logout
	// Erase login file so that we don't automatically
	// login next time.
	filedelete(loginFilename);
	
	// Quit data entry
	stop(1);
endif;

reenter;
PROC VIEW_DATE

postproc
if VIEW_DATE = "View all" then
	ShowSummaryReport();
	reenter;
//else
//	ShowSummaryReport_EA(CHOOSE_REPORT);
//	reenter;
endif;

PROC CHOOSE_REPORT

onfocus

string menuApplicationFolder = pathname(Application); //this is the path of our application
string dataFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
string eacode;
		
numeric i = 2, ctr;
dirlist(fileListing,dataFolder,"*.dat");
    if length(fileListing) > 0 then
	    mycodes(1) = "View all";
    	mylabels(1) = "View all";
    
		do ctr = 1 while ctr <= length(fileListing)
			eacode = fileListing(ctr)[length(fileListing(ctr))-14:11];
			mycodes(i) = eacode;
			mylabels(i) = eacode;
			i = i + 1;
	    enddo;
	else
		errmsg("No data files found.");
		stop(1); 
	endif;

//mycodes(i) = notappl;
setvalueset(CHOOSE_REPORT, mycodes, mylabels);

postproc
if CHOOSE_REPORT = "View all" then
	//ShowSummaryReport();
	ShowSummaryReportAllbyDATE(VIEW_DATE);
	reenter;
else
	//ShowSummaryReport_EA(CHOOSE_REPORT);
	ShowSummaryReport_EAbyDATE(CHOOSE_REPORT, VIEW_DATE);
	reenter;
endif;

PROC CHOOSE_POSTCHECK_HOUSEHOLD

onfocus
// Create a dynamic value set of all completed households
// in the enumerator data file.

numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
if result <> 1 then
	errmsg("Unable to load enumerator data file");
	reenter ASSISTANT_SUPERVISOR_MENU;
endif;

// Start at first household in enumerator data file
locate(LESOTHOCENSUS2016_DICT, >=, "");
	
// Loop through all households 
// until loadcase returns zero when it hits end of file.
numeric i;
while loadcase(LESOTHOCENSUS2016_DICT) <> 0 do
	codes(i) = HOUSEHOLD_NUMBER;
	numeric indexOfHead = SEEK(B3 = 1);
	string nameOfHead;
	
	if FINAL_RESULT_CODE = 1 then
		if indexOfHead = 0 then
		   nameOfHead = "Not specified";
		else
		   nameOfHead = strip(B2(indexOfHead));
		endif;
		labels(i) = maketext("HOUSEHOLD %03d - %s", HOUSEHOLD_NUMBER, nameOfHead);
		i = i + 1;

	endif;	
enddo;
codes(i) = notappl;
setvalueset(CHOOSE_POSTCHECK_HOUSEHOLD, codes, labels);

postproc

locate(LESOTHOCENSUS2016_DICT, >=, "");
while loadcase(LESOTHOCENSUS2016_DICT) <> 0 do
	if CHOOSE_POSTCHECK_HOUSEHOLD = HOUSEHOLD_NUMBER then
		CreateAndRunSRPFF(DISTRICT, CONSTITUENCY, COMMUNITY_COUNCIL, ZONE, ENUMERATION_AREA, WARD, SETTLEMENT, VILLAGE_NUMBER, HOUSEHOLD_NUMBER);
	endif;
enddo;

errmsg("Something went horribly wrong. Please contact technical support");
reenter ASSISTANT_SUPERVISOR_MENU;
PROC SUMMARY_REPORT_MENU

if SUMMARY_REPORT_MENU = 2 then
   SexRatioReport();
   
endif;
reenter;
