PROC GLOBAL
// Arrays for dynamic value sets
array numeric codes(200);

array string labels(200);
array string mycodes(200);
array string mylabels(200);
array string mylabels2(200);
array string myID(200);
array string EAarray(25);

array ageBySex5YearGroups(22, 2);

string menuApplicationFolder, householdApplicationFolder, assSupRevApplicationFolder;
string supervisorDataFileFolder, enumeratorDataFileFolder;
string loginFilename, eacode, enumeratorEA;
string enumeratorDataFileName,enumeratorDataFileNameCopy; //
string supervisorDataFilename; //
string enumtempFileName; //
numeric ea, totMales = 0, totFemales = 0, totPopulation = 0, males, females, population; //

list string fileListing; //variable to store all data files in a directory

file tmpFile;
file tempFile;
file pffFile; // File variable for writing out data entry pff file

//********************************************************************************************************

function OnStop() // if they try to stop adding data without finishing the case

	numeric selection;
	selection = errmsg("Are you sure quit the program?")
	select("Yes",continue,"No",continue);

	if selection = 1 then
		stop(1);
	else
		reenter;
	endif;

end;

function pickEA()

    menuApplicationFolder = pathname(Application); //this is the path of our application;
	enumeratorDataFileFolder = menuApplicationFolder + "../../Data/Enumerator"; //this is the data folder (all our data is stored in here)
	      
    numeric i = i;
    
    dirlist(fileListing,enumeratorDataFileFolder,"*.dat");
        
        if length(fileListing) > 0 then
           eaarray(1) = "View All";
            do i = 1 while i <= length(fileListing)
                eacode = fileListing(i)[length(fileListing(i))-14:11];
                
                EAarray(i+1) = eacode;
            enddo;
        else
            errmsg("No data files found.");
        endif;
        
        EAarray(i+1) = "";
        
    numeric indexChosen = accept("Choose EA", EAarray);
    if indexChosen = 0 then
        reenter;
    endif;
    
    pickEA = indexChosen - 1;
    
end;

//************************************************************************************************************

function agebysexProcessing(string eaFilename)

	setfile(LESOTHOCENSUS2016_DICT, eaFilename);
	
	locate(LESOTHOCENSUS2016_DICT, >=, "");	
	while loadcase(LESOTHOCENSUS2016_DICT) <> 0 do
		
		// Loop through each individual in household
		numeric personNum;
		do personNum = 1 while personNum <= count(LESOTHOCENSUS2016_DICT.INDIVIDUAL)
			
			if (B4(personNum) in 0:130) then
				numeric ageGroup = int(low(100,B5(personNum))/5) + 1;
				   inc(ageBySex5YearGroups(ageGroup, B4(personNum)));
				   inc(ageBySex5YearGroups(22, B4(personNum)));
			
			endif;
		enddo;
		
	 enddo;
	close(LESOTHOCENSUS2016_DICT);

end;
//***************************************************************************************************

function  ageBySexTable()
	numeric EApicked = pickEA();// 0 = view all, 1+ = index of EA
	
	//trace(maketext("Load file: %s", maketext("%s%011d.dat", "../Data/Enumerator/", EApicked)));
	//setfile(LESOTHOCENSUS2016_DICT, maketext("%s%s%011d.dat", pathname(Application), "../Data/Enumerator/", EApicked));
	string reportFilename;
	string agebysex;

	//Clearing the array before generating the report,
	//to avoid double counting.
	numeric i;
	do i = 1 while i <= 22 
		ageBySex5YearGroups(i, 1) = 0;
		ageBySex5YearGroups(i, 2) = 0;
	enddo;

	if EApicked >= 1 then
		agebysexProcessing(fileListing(EApicked));
	
	else // they selected View All
		do i = 1 while i <= length(fileListing)
			agebysexProcessing(fileListing(i));
		enddo;
	
	endif;
	
	// Write out age by sex distribution to EA array that looks like:
	// var data = [
	//    {group: '0-4', male: 10, female: 12, total: 22},
	//    {group: '5-9', male: 14, female: 15, total: 29},
	//    ...
	//	  {group: '100+', male: 1, female: 1, total: 2}
	// ];

	string reportDataFilename = maketext("%sagebysex.js", pathname(Application));
	setfile(tempFile, reportDataFilename);
	
	filewrite(tempFile, "var data = {");
	filewrite(tempFile, "ageGroups: [");
  	numeric groupNum;
  	do groupNum = 1 while groupNum <= 21
  		numeric lowerBound = (groupNum - 1) * 5;
  		numeric upperBound = groupNum * 5 - 1;
  		numeric male = ageBySex5YearGroups(groupNum, 1);
  		numeric female = ageBySex5YearGroups(groupNum, 2);
  		numeric total = male + female;
  				  
  		if groupNum <= 20 then
  		   filewrite(tempFile, "{group: '%d-%d', male: %d, female: %d, total: %d},", 
  				      lowerBound, upperBound, male, female, total);
  				       
  		elseif groupNum = 21 then
  			filewrite(tempFile, "{group: '100+', male: %d, female: %d, total: %d},", 
  				       male, female, total); 
  				       
  		endif	  
  								  
	enddo;
	
	filewrite(tempFile, "],");
	// for male and female totals
	male = ageBySex5YearGroups(22, 1);
	female = ageBySex5YearGroups(22, 2);
	total = male + female;
	filewrite(tempFile, "total: {male: %d, female: %d, total: %d},", 
		       male, female, total); 
	filewrite(tempFile, "};");
	close(tempFile);

	reportFilename = maketext("%sagebysex.html", pathname(Application));
	//agebysex = maketext("%s%d.dat", "../../Data/Enumerator/", EApicked);
	agebysex = maketext("%s%d.dat", enumeratorDataFileFolder, EApicked);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		//execsystem(maketext("%sexplorer.exe %s", 
		//				    pathname(Windows), 
		//				    reportFilename));
		
		execsystem(maketext("view:%s", reportFilename));
	endif;
end;
//******************************************************************************************************

function SexRatioProcessing(string eaFilename)

	setfile(LESOTHOCENSUS2016_DICT, eaFilename);
	
	// Loop through all households 
	// until loadcase returns zero when it hits end of file.
	locate(LESOTHOCENSUS2016_DICT, >=, "");	
	while loadcase(LESOTHOCENSUS2016_DICT) <> 0 do
		
		// Loop through each individual in household
		numeric personNum;
		do personNum = 1 while personNum <= count(LESOTHOCENSUS2016_DICT.INDIVIDUAL)
			if (B5(personNum) in 0:130) then
			   numeric ageGroup = int (low(100,B5(personNum))/5) + 1;
			   inc(ageBySex5YearGroups(ageGroup, B4(personNum)));
				
			endif;
		enddo;		
	 enddo;
	 
	 close(LESOTHOCENSUS2016_DICT);

end;


function SexRatioReport()
	//Clearing the array before generating the report,
	//to avoid double counting.
	numeric i;
	do i = 1 while i <= 21 
		ageBySex5YearGroups(i, 1) = 0;
		ageBySex5YearGroups(i, 2) = 0;
	enddo;
	

	numeric EApicked = pickEA(); // 0 = view all, 1+ = index of EA

	if EApicked >= 1 then
		SexRatioProcessing(fileListing(EApicked));
	
	else // they selected View All
		do i = 1 while i <= length(fileListing)
			SexRatioProcessing(fileListing(i));
		enddo;
	
	endif;
 
	string reportFilename = maketext("%sSex Ratio Report.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	

	filewrite(tempFile, "Age Groups    Males      Female     Total    Sex Ratio");
	filewrite(tempFile, "------------------------------------------------------");
	
  	numeric groupNum;
  	do groupNum = 1 while groupNum <= 21
  		numeric lowerBound = (groupNum - 1) * 5;
  		numeric upperBound = groupNum * 5 - 1;
  		numeric male = ageBySex5YearGroups(groupNum, 1);
  		numeric female = ageBySex5YearGroups(groupNum, 2);
  		numeric total = male + female;
  		numeric SexRatio = (male/female) * 100;
		
		if groupNum <= 20 then
  		   filewrite(tempFile, " %3d -%3d       %3d       %3d        %3d        %3d", 
  				      lowerBound, upperBound, male, female, total, SexRatio); 
  		elseif groupNum = 21 then
  			filewrite(tempFile, "  100+          %3d       %3d        %3d         %3d", 
  				       male, female, total, SexRatio); 
  		endif	  
  	    
	enddo;
	filewrite(tempFile, "------------------------------------------------------");
	filewrite(tempFile, "--------------------END OF REPORT---------------------");
	//filewrite(tempFile, "];");
	close(tempFile);

	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;

//****************************************************************************************************

function CreateAndRunPFF()

	string tempFolder = pathname(Temp);
	string pffFilename = tempFolder + "HouseholdDataEntry.pff";
	string fileDescription = maketext("EA - %s", STAFF_EA);

	menuApplicationFolder = pathname(Application);
	householdApplicationFolder = menuApplicationFolder + "../HouseholdDataEntry/";
	dircreate(householdApplicationFolder);
	enumeratorDataFileFolder = menuApplicationFolder + "../../Data/Enumerator/";
	
	setfile(pffFile,pffFilename,create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 6.2");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description=2016 LESOTHO PHC(%s)", fileDescription);

	filewrite(pffFile,"[DataEntryInit]");

	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%sHouseholdDataEntry.ent", householdApplicationFolder);	
	enumeratorDataFilename = maketext("%s.dat", STAFF_EA);
	filewrite(pffFile,"InputData=%s%s",enumeratorDataFileFolder,enumeratorDataFilename);

	filewrite(pffFile,"[Parameters]");
	filewrite(pffFile,"DISTRICT=%02d",S_DISTRICT);
	filewrite(pffFile,"CONSTITUENCY=%02d",S_CONSTITUENCY);
	filewrite(pffFile,"COMMUNITY_COUNCIL=%s",S_COMMUNITY_COUNCIL);
	filewrite(pffFile,"ZONE=%d",S_ZONE);
	filewrite(pffFile,"SETTLEMENT=%d",S_SETTLEMENT);
	filewrite(pffFile,"ENUMERATION_AREA=%s",STAFF_EA);
	
	close(pffFile);

	numeric result = execpff(filename(pffFile), stop);
	if result <> 1 then
		errmsg("Failed to launch household data entry");
		reenter;
	endif;

end;

// File variable for writing out supervisor review pff file
file sr_pffFile;

function CreateAndRunSRPFF()

	string tempFolder = pathname(Temp);
	string pffFilename = tempFolder + "AssistSupReview.pff";
	string fileDescription = maketext("EA - %011d", ENUMERATION_AREA);

	menuApplicationFolder = pathname(Application);
	assSupRevApplicationFolder = menuApplicationFolder + "../AssistSupReview/";
	supervisorDataFileFolder = menuApplicationFolder + "../../Data/Supervisor/";
	setfile(sr_pffFile,pffFilename,create);

	filewrite(sr_pffFile,"[Run Information]");
	filewrite(sr_pffFile,"Version=CSPro 6.2");
	filewrite(sr_pffFile,"AppType=Entry");
	filewrite(sr_pffFile,"Description=2016 LESOTHO PHC(%s)", fileDescription);

	filewrite(sr_pffFile,"[DataEntryInit]");
	filewrite(sr_pffFile,"StartMode=Add;%s", key(LESOTHOCENSUS2016_DICT));	

	filewrite(sr_pffFile,"[Files]");
	filewrite(sr_pffFile,"Application=%sAssistSupReview.ent", assSupRevApplicationFolder);	
	supervisorDataFilename = maketext("RV%011d.dat", ENUMERATION_AREA);
	filewrite(sr_pffFile,"InputData=%s%s",supervisorDataFileFolder,supervisorDataFilename);

	filewrite(sr_pffFile,"[Parameters]");
	filewrite(sr_pffFile,"DISTRICT=%d",DISTRICT);
	filewrite(sr_pffFile,"CONSTITUENCY=%d",CONSTITUENCY);
	filewrite(sr_pffFile,"COMMUNITY_COUNCIL=%s",COMMUNITY_COUNCIL);
	filewrite(sr_pffFile,"ZONE=%d",ZONE);
	filewrite(sr_pffFile,"SETTLEMENT=%d",SETTLEMENT);
	filewrite(sr_pffFile,"ENUMERATION_AREA=%d",ENUMERATION_AREA);
	filewrite(sr_pffFile,"WARD=%d",WARD);
	filewrite(sr_pffFile,"VILLAGE_NUMBER=%d",VILLAGE_NUMBER);
	filewrite(sr_pffFile,"VILLAGE_NAME=%s",VILLAGE_NAME);
	filewrite(sr_pffFile,"HOUSEHOLD_NUMBER=%d",HOUSEHOLD_NUMBER);
	filewrite(sr_pffFile,"HOUSEHOLD_HEAD_NAMES=%s",HOUSEHOLD_HEAD_NAMES);
	filewrite(sr_pffFile,"STAFF_CODE=%d",USER_CODE);
	
	close(sr_pffFile);

	numeric result = execpff(filename(sr_pffFile), stop);
	if result <> 1 then
		errmsg("Failed to launch assistant supervisor review data entry");
		reenter;
	endif;

end;


//function to display data for all the enumeration areas irrespective of the date they were enumerated on.
function ShowSummaryReport()

	string reportFilename = maketext("%ssummaryreport.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	filewrite(tempFile, "Enumeration Area Summary Report");
	filewrite(tempFile, "-------------------------------");
	filewrite(tempFile, "");

	menuApplicationFolder = pathname(Application); //this is the path of our application
	enumeratorDataFileFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
		
	numeric ctr;
    dirlist(fileListing,enumeratorDataFileFolder,"*.dat");
    
	do ctr = 1 while ctr <= length(fileListing)
		eacode = fileListing(ctr)[length(fileListing(ctr))-14:11];
	
		enumeratorDataFilename = maketext("%s%011s.dat", enumeratorDataFileFolder, eacode);
		// Create a dynamic value set of all completed households
		// in the enumerator data file.	
		numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
		if result <> 1 then
			errmsg("Unable to load enumerator data file");
			reenter ASSISTANT_SUPERVISOR_MENU;
		endif;
		
		// Start at first household in enumerator data file
		if locate(LESOTHOCENSUS2016_DICT, >=, "") <> 0 then	
			// Loop through all households 
			// until loadcase returns zero when it hits end of file.
			numeric i;
			numeric TotalHH =0;
			numeric CompletedHH = 0;
			numeric PartialHH = 0;
			numeric NoMember = 0;
			numeric Absent = 0;
			numeric Vacant = 0;
			numeric Destroyed = 0;
			numeric PartialSave = 0;
			totMales = 0;
			totFemales = 0;
			totPopulation = 0;
			do i = 0 while loadcase(LESOTHOCENSUS2016_DICT) <> 0
				if FINAL_RESULT_CODE = 1 then
					CompletedHH = CompletedHH + 1;
				elseif FINAL_RESULT_CODE = 6 then
					PartialHH = PartialHH + 1;
				elseif HOUSEHOLD_STATUS = 2 then
					NoMember = NoMember + 1;
				elseif HOUSEHOLD_STATUS = 3 then
					Absent = Absent + 1;
				elseif HOUSEHOLD_STATUS = 4 then
					Vacant = Vacant + 1;
				elseif HOUSEHOLD_STATUS = 5 then
					Destroyed = Destroyed + 1;
				elseif not FINAL_RESULT_CODE in 1,6 then
					PartialSave = PartialSave + 1;
				endif;
				TotalHH = TotalHH +1;
				
				males  = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 1);
				females = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 2);
				//population = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL);
			
				totMales = totMales + males;
				totFemales = totFemales + females;
				//totPopulation = totPopulation + population;
			enddo;
			
			totPopulation = totMales + totFemales;
		endif;		
		filewrite(tempFile,"EA CODE: %011d",ENUMERATION_AREA);
		filewrite(tempfile,"Households%s","								Household Status");
		filewrite(tempFile,"%d										%s",CompletedHH,getlabel(FINAL_RESULT_CODE,1));
		filewrite(tempFile,"%d										%s",PartialHH,getlabel(FINAL_RESULT_CODE,6));
		filewrite(tempFile,"%d										%s",NoMember,getlabel(HOUSEHOLD_STATUS,2));
		filewrite(tempFile,"%d										%s",Absent,getlabel(HOUSEHOLD_STATUS,3));
		filewrite(tempFile,"%d										%s",Vacant,getlabel(HOUSEHOLD_STATUS,4));
		filewrite(tempFile,"%d										%s",Destroyed,getlabel(HOUSEHOLD_STATUS,5));
		filewrite(tempFile,"%d										Partially saved",PartialSave);
		filewrite(tempFile, "----------------------------------------------------------");
		filewrite(tempFile,"%d										%s",TotalHH,"Total Households");
		filewrite(tempFile,"");
		filewrite(tempFile, "==========================================================");
		filewrite(tempFile,"%d										%s",totMales,"Total Males");
		filewrite(tempFile,"%d										%s",totFemales,"Total Females");
		filewrite(tempFile,"%d										%s",totPopulation,"Total Population");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"******end of report for current enumeration area code******");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"");

	enddo;
	    
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;

{
function ShowSummaryReport_EA(string eacode)

	string reportFilename = maketext("%ssummaryreport.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	filewrite(tempFile, "Enumeration Area Summary Report");
	filewrite(tempFile, "-------------------------------");
	filewrite(tempFile, "");

//	menuApplicationFolder = pathname(Application); //this is the path of our application
//	enumeratorDataFileFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
	
		enumeratorDataFilename = maketext("%s%011s.dat", enumeratorDataFileFolder, eacode);
		// Create a dynamic value set of all completed households
		// in the enumerator data file.	
		numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
		if result <> 1 then
			errmsg("Unable to load enumerator data file");
			reenter ASSISTANT_SUPERVISOR_MENU;
		endif;
		
		// Start at first household in enumerator data file
		locate(LESOTHOCENSUS2016_DICT, >=, "");	
			// Loop through all households 
			// until loadcase returns zero when it hits end of file.
			numeric i;
			numeric TotalHH =0;
			numeric CompletedHH = 0;
			numeric PartialHH = 0;
			numeric NoMember = 0;
			numeric Absent = 0;
			numeric Vacant = 0;
			numeric Destroyed = 0;
			numeric PartialSave = 0;
			totMales = 0;
			totFemales = 0;
			totPopulation = 0;
			do i = 0 while loadcase(LESOTHOCENSUS2016_DICT) <> 0
				if FINAL_RESULT_CODE = 1 then
					CompletedHH = CompletedHH + 1;
				elseif FINAL_RESULT_CODE = 6 then
					PartialHH = PartialHH + 1;
				elseif HOUSEHOLD_STATUS = 2 then
					NoMember = NoMember + 1;
				elseif HOUSEHOLD_STATUS = 3 then
					Absent = Absent + 1;
				elseif HOUSEHOLD_STATUS = 4 then
					Vacant = Vacant + 1;
				elseif HOUSEHOLD_STATUS = 5 then
					Destroyed = Destroyed + 1;
				elseif not FINAL_RESULT_CODE in 1,6 then
					PartialSave = PartialSave + 1;
				endif;
				TotalHH = TotalHH +1;
				
				males  = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 1);
				females = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 2);
				//population = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL);
			
				totMales = totMales + males;
				totFemales = totFemales + females;
				//totPopulation = totPopulation + population;
			enddo;
			
			totPopulation = totMales + totFemales;
				
		filewrite(tempFile,"EA CODE: %011d",ENUMERATION_AREA);
		filewrite(tempfile,"Households%s","								Household Status");
		filewrite(tempFile,"%d										%s",CompletedHH,getlabel(FINAL_RESULT_CODE,1));
		filewrite(tempFile,"%d										%s",PartialHH,getlabel(FINAL_RESULT_CODE,6));
		filewrite(tempFile,"%d										%s",NoMember,getlabel(HOUSEHOLD_STATUS,2));
		filewrite(tempFile,"%d										%s",Absent,getlabel(HOUSEHOLD_STATUS,3));
		filewrite(tempFile,"%d										%s",Vacant,getlabel(HOUSEHOLD_STATUS,4));
		filewrite(tempFile,"%d										%s",Destroyed,getlabel(HOUSEHOLD_STATUS,5));
		filewrite(tempFile,"%d										Partially saved",PartialSave);
		filewrite(tempFile, "----------------------------------------------------------");
		filewrite(tempFile,"%d										%s",TotalHH,"Total Households");
		filewrite(tempFile,"");
		filewrite(tempFile, "==========================================================");
		filewrite(tempFile,"%d										%s",totMales,"Total Males");
		filewrite(tempFile,"%d										%s",totFemales,"Total Females");
		filewrite(tempFile,"%d										%s",totPopulation,"Total Population");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"******end of report for current enumeration area code******");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"");
	    
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;
}

//function to display all the EAs for a specific date selected by the supervisor
function ShowSummaryReportAllbyDATE(string viewdate)

	string reportFilename = maketext("%ssummaryreport.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	filewrite(tempFile, "Enumeration Area Summary Report");
	filewrite(tempFile, "-------------------------------");
	filewrite(tempFile, "");

//	menuApplicationFolder = pathname(Application); //this is the path of our application
//	enumeratorDataFileFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
		
	numeric ctr;
    dirlist(fileListing,enumeratorDataFileFolder,"*.dat");
    
	do ctr = 1 while ctr <= length(fileListing)
		eacode = fileListing(ctr)[length(fileListing(ctr))-14:11];
	
		enumeratorDataFilename = maketext("%s%011s.dat", enumeratorDataFileFolder, eacode);
		// Create a dynamic value set of all completed households
		// in the enumerator data file.	
		numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
		if result <> 1 then
			errmsg("Unable to load enumerator data file");
			reenter ASSISTANT_SUPERVISOR_MENU;
		endif;
		
		// Start at first household in enumerator data file
		if locate(LESOTHOCENSUS2016_DICT, >=, "") <> 0 then
			// Loop through all households 
			// until loadcase returns zero when it hits end of file.
			numeric i;
			numeric TotalHH =0;
			numeric CompletedHH = 0;
			numeric PartialHH = 0;
			numeric NoMember = 0;
			numeric Absent = 0;
			numeric Vacant = 0;
			numeric Destroyed = 0;
			numeric PartialSave = 0;
			totMales = 0;
			totFemales = 0;
			totPopulation = 0;
			do i = 0 while loadcase(LESOTHOCENSUS2016_DICT) <> 0				
				if viewdate = INTERVIEW_DATE then
					if FINAL_RESULT_CODE = 1 then
						CompletedHH = CompletedHH + 1;
					elseif FINAL_RESULT_CODE = 6 then
						PartialHH = PartialHH + 1;
					elseif HOUSEHOLD_STATUS = 2 then
						NoMember = NoMember + 1;
					elseif HOUSEHOLD_STATUS = 3 then
						Absent = Absent + 1;
					elseif HOUSEHOLD_STATUS = 4 then
						Vacant = Vacant + 1;
					elseif HOUSEHOLD_STATUS = 5 then
						Destroyed = Destroyed + 1;
					elseif not FINAL_RESULT_CODE in 1,6 then
						PartialSave = PartialSave + 1;
					endif;
					TotalHH = TotalHH +1;
				
					males  = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 1);
					females = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 2);
					//population = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL);
				
					totMales = totMales + males;
					totFemales = totFemales + females;
					//totPopulation = totPopulation + population;
				endif;
			enddo;
			
			totPopulation = totMales + totFemales;
		endif;						
		filewrite(tempFile,"DATE: %s", viewdate);
		filewrite(tempFile,"EA CODE: %011d",ENUMERATION_AREA);
		filewrite(tempfile,"Households%s","								Household Status");
		filewrite(tempFile,"%d										%s",CompletedHH,getlabel(FINAL_RESULT_CODE,1));
		filewrite(tempFile,"%d										%s",PartialHH,getlabel(FINAL_RESULT_CODE,6));
		filewrite(tempFile,"%d										%s",NoMember,getlabel(HOUSEHOLD_STATUS,2));
		filewrite(tempFile,"%d										%s",Absent,getlabel(HOUSEHOLD_STATUS,3));
		filewrite(tempFile,"%d										%s",Vacant,getlabel(HOUSEHOLD_STATUS,4));
		filewrite(tempFile,"%d										%s",Destroyed,getlabel(HOUSEHOLD_STATUS,5));
		filewrite(tempFile,"%d										Partially saved",PartialSave);
		filewrite(tempFile, "----------------------------------------------------------");
		filewrite(tempFile,"%d										%s",TotalHH,"Total Households");
		filewrite(tempFile,"");
		filewrite(tempFile, "==========================================================");
		filewrite(tempFile,"%d										%s",totMales,"Total Males");
		filewrite(tempFile,"%d										%s",totFemales,"Total Females");
		filewrite(tempFile,"%d										%s",totPopulation,"Total Population");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"******end of report for current enumeration area code******");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"");

	enddo;
	    
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;

//function to display data for the EA selected by the supervisor on a specific date
function ShowSummaryReport_EAbyDATE(string eacode, string viewdate)

	string reportFilename = maketext("%ssummaryreport.txt", pathname(Application));
	setfile(tempFile, reportFilename);
	filewrite(tempFile, "Enumeration Area Summary Report by Day");
	filewrite(tempFile, "-------------------------------");
	filewrite(tempFile, "");

//  menuApplicationFolder = pathname(Application); //this is the path of our application
//	enumeratorDataFileFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
	
		enumeratorDataFilename = maketext("%s%011s.dat", enumeratorDataFileFolder, eacode);
		// Create a dynamic value set of all completed households
		// in the enumerator data file.	
		numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);
		if result <> 1 then
			errmsg("Unable to load enumerator data file");
			reenter ASSISTANT_SUPERVISOR_MENU;
		endif;
		
		// Start at first household in enumerator data file
		if locate(LESOTHOCENSUS2016_DICT, >=, "") <> 0 then
			// Loop through all households 
			// until loadcase returns zero when it hits end of file.
			numeric i;
			numeric TotalHH =0;
			numeric CompletedHH = 0;
			numeric PartialHH = 0;
			numeric NoMember = 0;
			numeric Absent = 0;
			numeric Vacant = 0;
			numeric Destroyed = 0;
			numeric PartialSave = 0;
			totMales = 0;
			totFemales = 0;
			totPopulation = 0;
			do i = 0 while loadcase(LESOTHOCENSUS2016_DICT) <> 0
				if viewdate = INTERVIEW_DATE then
					if FINAL_RESULT_CODE = 1 then
						CompletedHH = CompletedHH + 1;
					elseif FINAL_RESULT_CODE = 6 then
						PartialHH = PartialHH + 1;
					elseif HOUSEHOLD_STATUS = 2 then
						NoMember = NoMember + 1;
					elseif HOUSEHOLD_STATUS = 3 then
						Absent = Absent + 1;
					elseif HOUSEHOLD_STATUS = 4 then
						Vacant = Vacant + 1;
					elseif HOUSEHOLD_STATUS = 5 then
						Destroyed = Destroyed + 1;
					elseif not FINAL_RESULT_CODE in 1,6 then
						PartialSave = PartialSave + 1;
					endif;
					TotalHH = TotalHH +1;
				
					males  = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 1);
					females = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL WHERE B4 = 2);
					//population = count(LESOTHOCENSUS2016_DICT.INDIVIDUAL);
				
					totMales = totMales + males;
					totFemales = totFemales + females;
					//totPopulation = totPopulation + population;
				endif;
			enddo;
			
			totPopulation = totMales + totFemales;
		endif;		
		filewrite(tempFile,"DATE: %s", viewdate);
		filewrite(tempFile,"EA CODE: %011d",ENUMERATION_AREA);
		filewrite(tempfile,"Households%s","								Household Status");
		filewrite(tempFile,"%d										%s",CompletedHH,getlabel(FINAL_RESULT_CODE,1));
		filewrite(tempFile,"%d										%s",PartialHH,getlabel(FINAL_RESULT_CODE,6));
		filewrite(tempFile,"%d										%s",NoMember,getlabel(HOUSEHOLD_STATUS,2));
		filewrite(tempFile,"%d										%s",Absent,getlabel(HOUSEHOLD_STATUS,3));
		filewrite(tempFile,"%d										%s",Vacant,getlabel(HOUSEHOLD_STATUS,4));
		filewrite(tempFile,"%d										%s",Destroyed,getlabel(HOUSEHOLD_STATUS,5));
		filewrite(tempFile,"%d										Partially saved",PartialSave);
		filewrite(tempFile, "----------------------------------------------------------");
		filewrite(tempFile,"%d										%s",TotalHH,"Total Households");
		filewrite(tempFile,"");
		filewrite(tempFile, "==========================================================");
		filewrite(tempFile,"%d										%s",totMales,"Total Males");
		filewrite(tempFile,"%d										%s",totFemales,"Total Females");
		filewrite(tempFile,"%d										%s",totPopulation,"Total Population");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"******end of report for current enumeration area code******");
		filewrite(tempFile,"***********************************************************");
		filewrite(tempFile,"");
	    
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "browse:"
		execsystem(maketext("view:%s", reportFilename));
	else
		// Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", 
						    pathname(Windows), 
						    reportFilename));
	endif;
end;
function CreateAndRunCSPFF()

	string tempFolder = pathname(Temp);
	string pffFilename = tempFolder + "HouseholdDataEntry.pff";
	string fileDescription = maketext("EA - %s", CONSTITUENCY_EACODE);

//	menuApplicationFolder = pathname(Application);
//	householdApplicationFolder = menuApplicationFolder + "../HouseholdDataEntry/";
	
	setfile(pffFile,pffFilename,create);

	filewrite(pffFile,"[Run Information]");
	filewrite(pffFile,"Version=CSPro 6.2");
	filewrite(pffFile,"AppType=Entry");
	filewrite(pffFile,"Description=2016 LESOTHO PHC(%s)", fileDescription);

	filewrite(pffFile,"[DataEntryInit]");
	filewrite(pffFile,"Startmode=modify;%s",IDENTIFIER);
	filewrite(pffFile,"[Files]");
	filewrite(pffFile,"Application=%sHouseholdDataEntry.ent", householdApplicationFolder);	
	
	filewrite(pffFile,"InputData=%s",enumeratorDataFilename);

	
	
	close(pffFile);

	numeric result = execpff(filename(pffFile), stop);
	if result <> 1 then
		errmsg("Failed to launch household data entry");
		reenter;
	endif;

end;

PROC LESOTHOCENSUSMENU_FF
preproc

loginFilename = pathname(Application) + "login.txt";
enumeratorEA = pathname(Application) + "eacode.txt";	
menuApplicationFolder = pathname(Application);
enumeratorDataFileFolder = menuApplicationFolder + "../../Data/Enumerator/";
supervisorDataFileFolder = menuApplicationFolder + "../../Data/Supervisor/";
householdApplicationFolder = menuApplicationFolder + "../HouseholdDataEntry/";
assSupRevApplicationFolder = menuApplicationFolder + "../AssistSupReview/";

dircreate(enumeratorDataFileFolder);
dircreate(supervisorDataFileFolder);
dircreate(householdApplicationFolder);
dircreate(assSupRevApplicationFolder);


// Check to see if user is already logged in
if fileexist(enumeratorEA) = 1 then
	if setfile(tmpFile, enumeratorEA) = 1 then
		string codeString;
		numeric result = fileread(tmpFile, codeString);
		if result = 1 then
			// We have read in ea code from eacode file
			ea = tonumber(codeString);
			//ASS_SUP_EA = maketext("%011d",ea);
		endif;
		close(tmpFile);
	endif;
endif;

enumeratorDataFilename = maketext("%s%011d.dat", enumeratorDataFileFolder, ea);
string SDFolder;


SDFolder = pathname(CSEntryExternal);
dircreate(SDFolder);
numeric copied  = filecopy(enumeratorDataFilename, SDFolder);
 
 if copied = 1 then
 	errmsg("Backup was successfuly made");
 	errmsg("%s ", SDFolder);
 else
 	errmsg("Unable to create Backup")
 endif;

PROC USER_CODE
preproc

// Check to see if user is already logged in
if fileexist(loginFilename) = 1 then
	if setfile(tmpFile, loginFilename) = 1 then
		string codeString;
		numeric result = fileread(tmpFile, codeString);
		if result = 1 then
			// We have read in staff code from login file
			// we need to check that it is valid by looking it up in
			// the staff lookup file.
			STAFF_CODE = tonumber(codeString);
			if loadcase(STAFF_DICT, STAFF_CODE) = 1 then
				// User code from login file is valid, use noinput
				// to avoid entering user code.
				USER_CODE = STAFF_CODE;
				noinput;
			endif;
		endif;
		close(tmpFile);
	endif;
endif;

postproc
// Validate user code is correct
// Go to either enumerator menu or supervisor menu
// depending on the role of the user.

STAFF_CODE = USER_CODE;
if loadcase(STAFF_DICT, STAFF_CODE) = 0 then
	// The code was not found in the staff lookup file.
	errmsg("Invalid user code. Try again.");
	reenter;
else
	// Found the code in the staff lookup file.
	// STAFF_ROLE and STAFF_NAME are now filled in with values
	// from the lookup file.
	if not STAFF_ROLE in 1:3 then
		errmsg("Invalid role");
		reenter;
	else
	
		// Login successfull, save out the staff code
		// so that they don't have to login again until they logout.
		if setfile(tmpFile, loginFilename, create) = 1 then
			filewrite(tmpFile, "%d", STAFF_CODE);
			close(tmpFile);
			
			//Save out the enumeration area for the enumerator so that the assisstant supervisor can use it to postcheck 
			//households
			if STAFF_ROLE = 1 then
				if setfile(tmpFile, enumeratorEA, create) = 1 then
					filewrite(tmpFile, "%s", STAFF_EA);
					close(tmpFile);
				endif;
			endif;
		endif;
				
		
		// Go to appropriate menu for staff role.	
		if STAFF_ROLE = 1 then
			skip to ENUMERATOR_MENU;
		elseif STAFF_ROLE = 2 then
			skip to ASSISTANT_SUPERVISOR_MENU;
		elseif STAFF_ROLE = 3 then
			skip to CONSTITUENCY_SUPERVISOR_MENU;
		endif;
	endif;
endif;

PROC ENUMERATOR_MENU

if ENUMERATOR_MENU = 1 then
	// Launch data entry
	CreateAndRunPFF();
elseif ENUMERATOR_MENU = 2 then
	if sync("SyncWithSupervisor.pnc") then
		errmsg("Sync was successful");
		stop(0);
	else
		reenter;
	endif;
elseif ENUMERATOR_MENU = 9 then
	// Logout	
	// Erase login file so that we don't automatically
	// login next time.
	filedelete(loginFilename);	
	// Quit data entry
	stop(1);
endif;

PROC ASSISTANT_SUPERVISOR_MENU
	
postproc
if fileexist(enumeratorDataFilename) = 1 then
	if ASSISTANT_SUPERVISOR_MENU = 1 then
		skip to CHOOSE_POSTCHECK_HOUSEHOLD;
	elseif ASSISTANT_SUPERVISOR_MENU in 2:3 then
		//skip to household_status;
	elseif ASSISTANT_SUPERVISOR_MENU = 4 then
		skip to APPROVE_CASES;
	elseif ASSISTANT_SUPERVISOR_MENU = 9 then
		// Logout
		// Erase login file so that we don't automatically
		// login next time.
		filedelete(loginFilename);
		// Quit data entry
		stop(1);
	endif;
elseif fileexist(enumeratorDataFilename) = 0 and ASSISTANT_SUPERVISOR_MENU <> 9 then
	errmsg("There is no data entered yet");
	reenter;
else
	filedelete(loginFilename);
	// Quit data entry
	stop(1);
endif;




{
postproc
if fileexist(enumeratorDataFilename) = 1 then
	if ASSISTANT_SUPERVISOR_MENU = 1 then
		skip to CHOOSE_POSTCHECK_HOUSEHOLD;
	elseif ASSISTANT_SUPERVISOR_MENU = 2 then
		//skip to household_status;
	elseif ASSISTANT_SUPERVISOR_MENU = 9 then
		// Logout
		// Erase login file so that we don't automatically
		// login next time.
		filedelete(loginFilename);
		// Quit data entry
		stop(1);
	endif;
endif;
}
PROC CONSTITUENCY_SUPERVISOR_MENU

postproc
if CONSTITUENCY_SUPERVISOR_MENU = 1 then
	skip to SUMMARY_REPORT_MENU;
elseif CONSTITUENCY_SUPERVISOR_MENU = 2 then
	SexRatioReport();
elseif CONSTITUENCY_SUPERVISOR_MENU = 3 then
	agebysexTable();
elseif CONSTITUENCY_SUPERVISOR_MENU = 4 then
	 skip to VIEW_DATE;  
elseif CONSTITUENCY_SUPERVISOR_MENU = 5 then
	if sync("ServerWithEnumerator.pnc") then
		errmsg("Sync was successful");
		stop(0);
	else
		reenter;
	endif;
elseif CONSTITUENCY_SUPERVISOR_MENU = 6 then
	if sync("SyncWithServer.pnc") then
		errmsg("Sync was successful");
		stop(0);
	else
		reenter;
	endif;
elseif CONSTITUENCY_SUPERVISOR_MENU = 9 then
	// Logout
	// Erase login file so that we don't automatically
	// login next time.
	filedelete(loginFilename);
	
	// Quit data entry
	stop(1);
endif;

reenter;
PROC VIEW_DATE

postproc
if VIEW_DATE = "View all" then
	ShowSummaryReport();
	reenter;
//else
//	ShowSummaryReport_EA(CHOOSE_REPORT);
//	reenter;
endif;

PROC CHOOSE_REPORT

onfocus

//menuApplicationFolder = pathname(Application); //this is the path of our application
//enumeratorDataFileFolderdataFolder = menuApplicationFolder + "../../Data/Enumerator/"; //this is the data folder (all our data is stored in here
		
numeric i = 2, ctr;
dirlist(fileListing,enumeratorDataFileFolder,"*.dat");
    if length(fileListing) > 0 then
	    mycodes(1) = "View all";
    	mylabels(1) = "View all";
    
		do ctr = 1 while ctr <= length(fileListing)
			string eacode = fileListing(ctr)[length(fileListing(ctr))-14:11];
			mycodes(i) = eacode;
			mylabels(i) = eacode;
			i = i + 1;
	    enddo;
	else
		errmsg("There are no data files found. Please synchronize with the enumerator")
			  select("Sync with enumerator", CONSTITUENCY_SUPERVISOR_MENU, "Logout", CONSTITUENCY_SUPERVISOR_MENU);
	endif;

//mycodes(i) = notappl;
setvalueset(CHOOSE_REPORT, mycodes, mylabels);

postproc
if CHOOSE_REPORT = "View all" then
	//ShowSummaryReport();
	ShowSummaryReportAllbyDATE(VIEW_DATE);
	reenter;
else
	//ShowSummaryReport_EA(CHOOSE_REPORT);
	ShowSummaryReport_EAbyDATE(CHOOSE_REPORT, VIEW_DATE);
	reenter;
endif;

PROC POSTCHECK

if POSTCHECK = 1 then
	skip to CHOOSE_POSTCHECK_HOUSEHOLD;
endif;

reenter;
PROC CHOOSE_POSTCHECK_HOUSEHOLD

onfocus
// Create a dynamic value set of all completed households
// in the enumerator data file.

numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);

if result <> 1 then
	errmsg("Unable to load enumerator data file");
	reenter ASSISTANT_SUPERVISOR_MENU;
endif;

// Start at first household in enumerator data file
if locate(LESOTHOCENSUS2016_DICT, >=, "") <> 1 then
	errmsg("There are no households in the enumerator data file");
	reenter ASSISTANT_SUPERVISOR_MENU;
endif;

// Loop through all households 
// until loadcase returns zero when it hits end of file.
numeric i = 1;
do while loadcase(LESOTHOCENSUS2016_DICT) <> 0
	codes(i) = i;
	
	if FINAL_RESULT_CODE = 1 then	
		myID(i) = key(LESOTHOCENSUS2016_DICT);
		labels(i) = maketext("%s", HOUSEHOLD_HEAD_NAMES);
		i = i + 1; 
	endif;	
enddo;

if i = 1 then
	errmsg("There are no completed households in the enumerator data file");
	reenter ASSISTANT_SUPERVISOR_MENU;
endif;


codes(i) = notappl;
setvalueset(CHOOSE_POSTCHECK_HOUSEHOLD, codes, labels);

postproc

/////////////////////////////////////

locate(LESOTHOCENSUS2016_DICT, =, myID(CHOOSE_POSTCHECK_HOUSEHOLD));
retrieve(LESOTHOCENSUS2016_DICT);
CreateAndRunSRPFF();


errmsg("Something went horribly wrong. Please contact technical support");
reenter ASSISTANT_SUPERVISOR_MENU;
PROC APPROVE_CASES

onfocus
// Create a dynamic value set of all completed households
// in the enumerator data file.

numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileName);

if result <> 1 then
	errmsg("Unable to load enumerator data file");
	reenter ASSISTANT_SUPERVISOR_MENU;
endif;

// Start at first household in enumerator data file
locate(LESOTHOCENSUS2016_DICT, >=, "");
// Loop through all households 
// until loadcase returns zero when it hits end of file.
numeric i = 1;
do while loadcase(LESOTHOCENSUS2016_DICT) <> 0	
	if HOUSEHOLD_STATUS in 2:6 and APPROVAL_STATUS <> 1 then
		codes(i) = i;
		myID(i) = key(LESOTHOCENSUS2016_DICT);
		labels(i) = maketext("%s  %s", strip(HOUSEHOLD_HEAD_NAMES), getLabel(HOUSEHOLD_STATUS_VS1, HOUSEHOLD_STATUS));
		i = i + 1;
	endif;	
enddo;
if i = 1 then
	errmsg("All cases have been approved");
	reenter ASSISTANT_SUPERVISOR_MENU;
endif;
codes(i) = notappl;
setvalueset(APPROVE_CASES, codes, labels);
APPROVE_CASES = notappl;

postproc
// modify the variable "approved by supervisor" in the household data file
// so that when the enumerator re-visits the household he/she can be able to
// accept the case and complete it.
locate(LESOTHOCENSUS2016_DICT, =, myID(APPROVE_CASES));
retrieve(LESOTHOCENSUS2016_DICT);
APPROVAL_STATUS = 1;
writecase(LESOTHOCENSUS2016_DICT);
reenter APPROVE_CASES;
PROC SUMMARY_REPORT_MENU

//menuApplicationFolder = pathname(Application); //this is the path of our application
//enumeratorDataFileFolder = menuApplicationFolder + "../Data/Enumerator/"; //this is the data folder (all our data is stored in here)

numeric i, ctr;
dirlist(fileListing,enumeratorDataFileFolder,"*.dat");
    if length(fileListing) > 0 then
	    mycodes(1) = "EA code";
    	mylabels(1) = "EA name";
    
		do ctr = 1 while ctr <= length(fileListing)
			string eacode = fileListing(ctr)[length(fileListing(ctr))-14:11];
			mycodes(ctr) = eacode;
			mylabels(ctr) = eacode;
			//i = i + 1;
	    enddo;
	else
		errmsg("No data files found.");
		stop(1); 
	endif;

//mycodes(i) = notappl;
setvalueset(CONSTITUENCY_EACODE, mycodes, mylabels);
PROC IDENTIFIER
onfocus
string HH_status, Checked;
//menuApplicationFolder = pathname(Application); //this is the path of our application
numeric b = dircreate(pathname(Application)+"Temp");

//enumeratorDataFileFolder = menuApplicationFolder + "../Data/Enumerator/"; //this is the data folder (all our data is stored in here)
numeric i;   
enumeratorDataFilename = maketext("%s%011s.dat", enumeratorDataFileFolder, CONSTITUENCY_EACODE);
if b = 1 then
	string dataFolderCopy = menuApplicationFolder + "/Temp/";
else
	errmsg("Unable to create a folder");
	reenter CONSTITUENCY_SUPERVISOR_MENU;
endif;

numeric c = filecopy(enumeratorDataFilename, dataFolderCopy);
if c = 1 then
	errmsg("File Copy was successfully made");
else
	errmsg("Unable to create file copy");
	reenter CONSTITUENCY_SUPERVISOR_MENU;
endif;
enumeratorDataFilenameCopy = maketext("%s%011s.dat", dataFolderCopy, CONSTITUENCY_EACODE);
// Create a dynamic value set of all completed households
// in the enumerator data file.	
numeric result = setfile(LESOTHOCENSUS2016_DICT, enumeratorDataFileNameCopy);
if result <> 1 then
	errmsg("Unable to load EA data file");
	reenter CONSTITUENCY_SUPERVISOR_MENU;
endif;

// Start at first household in enumerator data file
locate(LESOTHOCENSUS2016_DICT, >=, "");	
// Loop through all households 
// until loadcase returns zero when it hits end of file.
//numeric i;
do i = 1 while loadcase(LESOTHOCENSUS2016_DICT) <> 0
	
	if HOUSEHOLD_STATUS = 7 then
		if FINAL_RESULT_CODE = 1 then
	   		HH_status = getlabel(FINAL_RESULT_CODE,1);
	   	elseif FINAL_RESULT_CODE = 2 then
	   		HH_status = getlabel(FINAL_RESULT_CODE,2); 
	   	endif;
	else
		if HOUSEHOLD_STATUS = 2 then
			HH_status = getlabel(HOUSEHOLD_STATUS,2);
		elseif HOUSEHOLD_STATUS = 3 then
			HH_status = getlabel(HOUSEHOLD_STATUS,3);
		elseif HOUSEHOLD_STATUS = 4 then
			HH_status = getlabel(HOUSEHOLD_STATUS,4);
		elseif HOUSEHOLD_STATUS = 5 then
			HH_status = getlabel(HOUSEHOLD_STATUS,5);
		endif;
	endif;
	
	
	mycodes(i) = Strip(key(LESOTHOCENSUS2016_DICT));
	//mylabels(i)= maketext("%d %S %D %S",VILLAGE_NUMBER,VILLAGE_NAME,HOUSEHOLD_NUMBER,HOUSEHOLD_HEAD_NAMES); 
	mylabels(i)= STRIP(HH_status);
	//maketext("%d",HH_status);
	
enddo;

locate(ASS_SUP_DICT, >=, ""); 
do i = 1 while loadcase(ASS_SUP_DICT) <> 0
	if CHOOSE_POSTCHECK_HOUSEHOLD = HOUSEHOLD_NUMBER then
		if POSTCHECK = 1 then
			Checked = getlabel(POSTCHECK, 1);
		else
			Checked = getlabel(POSTCHECK, 2);
		endif;	
	
	endif;
	
	mylabels2(i)= strip(Checked);
enddo;

mycodes(i) = "";

setvalueset(IDENTIFIER, mycodes, mylabels, mylabels2);

postproc
//reenter CONSTITUENCY_SUPERVISOR_MENU;
//asDistrict, asConstituency, alpha asCouncil, asZone, asEA, asWard, asSettlement, asVillageno, asHouseholdno
CreateAndRunCSPFF();
//CreateAndRunSRPFF(DISTRICT, CONSTITUENCY, COMMUNITY_COUNCIL,ZONE, ENUMERATION_AREA, WARD, SETTLEMENT, VILLAGE_NUMBER, HOUSEHOLD_NUMBER);

if SUMMARY_REPORT_MENU = 2 then
   SexRatioReport();
   
endif;
reenter;
